using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Model;//0730

namespace Bll.BusinessFun
{
   public class AirMonitor
    {
        /// <summary>
        /// 全国空气质量0730
        /// </summary>
        /// <param name="sqlwhere"></param>
        /// <returns></returns>
        public DataSet GetAirChinaQuality()
        {
            SQLHelper sqlh = new SQLHelper();
          string sql = @"select * from V_Mid_CityDayData order by ID";
         DataSet data = sqlh.ExecuteSQLDataSet(sql);
            return data;
        }
       /// <summary>
       /// 获取空气质量日报数据
       /// </summary>
       /// <param name="sqlwhere"></param>
       /// <returns></returns>
       public DataSet GetAirDayMonitDataByWhere(string sqlwhere) 
       {
           SQLHelper sqlh = new SQLHelper();
           string sql = @"select a.StationName,a.StationCode,b.MoniDate,lon,lat,[SO2],[SO2AQI],[NO2AQI],[NO2],[COAQI],[CO],[O3AQI],[O3],[PM25AQI],[PM25],[PM10AQI],[PM10],[AQI],[FirstP],[AirLevel],c.* 
                        from dbo.T_Bas_AirStation a 
                        left join dbo.T_Mid_AirDayData b on a.StationName=b.StationName 
                        left join [dbo].[T_Bas_QualityStandard] c on b.AirLevel = c.QualityLevel
                        " + sqlwhere + " order by OrderID";
           return sqlh.ExecuteSQLDataSet(sql);
       }

       /// <summary>
       /// 获取空气质量小时数据
       /// </summary>
       /// <param name="sqlwhere"></param>
       /// <returns></returns>
       public DataSet GetHourAirMonitDataByWhere(string sqlwhere) 
       {
           SQLHelper sqlh = new SQLHelper();
           string sql = @"select a.StationName,a.StationCode,b.MoniDate,lon,lat,[SO2],[SO2AQI],[NO2AQI],[NO2],[COAQI],[CO],[O3AQI],[O3],[PM25AQI],[PM25],[PM10AQI],[PM10],[AQI],[FirstP],[AirLevel],c.* 
                        from dbo.T_Bas_AirStation a 
                        left join dbo.T_Mid_AirHourData b on a.StationName=b.StationName 
                        left join [dbo].[T_Bas_QualityStandard] c on b.AirLevel = c.QualityLevel
                        " + sqlwhere + " order by OrderID";
           return sqlh.ExecuteSQLDataSet(sql);
       }
       /// <summary>
       /// 获取最新日数据
       /// </summary>
       /// <param name="sqlwhere"></param>
       /// <returns></returns>
       public object GetAirDayMonitData(string sqlwhere)
       {
           SQLHelper sqlh = new SQLHelper();
           string sql = @"select * from  V_Mid_AirDayDataNew order by OrderID";
           return sqlh.ExecuteSQLDataSet(sql);
       }
       /// <summary>
       /// 获取最新小时数据
       /// </summary>
       /// <param name="sqlwhere"></param>
       /// <returns></returns>
       public object GetHourAirMonitData(string sqlwhere)
       {
           SQLHelper sqlh = new SQLHelper();
           string sql = @"select * from  V_Mid_AirHourDataNew order by OrderID";
           return sqlh.ExecuteSQLDataSet(sql);
       }
       /// <summary>
       /// 日数据展示
       /// </summary>
       /// <param name="sqlwhere"></param>
       /// <returns></returns>
       public object GetAirDayMonitDataDay(string sqlwhere)
       {
           SQLHelper sqlh = new SQLHelper();
           string sql = @"SELECT top 1  a.QualitySymbol [AirLevel] ,
        a.Category [AirLevelDes] ,
        b.AQI [AQI] ,
        b.FirstP [FirstP] ,
        CONVERT(VARCHAR(10), b.MoniDate, 120) [MoniDate]
FROM    dbo.T_Bas_QualityStandard a
        JOIN ( SELECT   *
               FROM     ( SELECT    * ,
                                    ROW_NUMBER() OVER ( ORDER BY MoniDate DESC ) AS rowno
                          FROM      T_Mid_AirDayData
                        ) t
               WHERE    rowno = 1
                        AND t.StationCode = 0
             ) b ON b.AQI >= a.MinValue
                    AND b.AQI <= a.MaxValue " + sqlwhere;
           return sqlh.ExecuteSQLDataSet(sql);
       }

       /// <summary>
       /// 获取空气质量监测数据
       /// </summary>
       /// <param name="sqlwhere"></param>
       /// <returns></returns>
       public object GetMonitorData(string datatype, string begin, string end, string station, string item)
       {
           SqlParameter[] para = { 
                                          new SqlParameter("@datatype",datatype),
                                          new SqlParameter("@begin",begin),
                                          new SqlParameter("@end",end),
                                          new SqlParameter("@station",station),
                                          new SqlParameter("@item",item),
                              };
           DataSet ds = SQLHelper.ExecuteDataset(SQLHelper.GetConnString(), CommandType.StoredProcedure, "Proc_AirMonitorData", para);
           return ds;
       }
      
    }
}
